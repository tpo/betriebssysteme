::

   /=\/=\
   |====|
    \==/
     \/

Git
===

Git wird fürs Versionieren von Dateien in einem Verzeichnis verwendet

::

        $ cd mein_zeug
        $ git init        # Sag git, dass alles in diesem Verzeichnis
                          # versioniert werden soll.
        Leeres Git-Repository in /home/pepe/mein_zeug/.git/ initialisiert
                      
                          # Dieser Schritt erstellt nur das
                          # Unterverzeichnis '.git/' mit Kontrol-
                          # strukturen drin und hat keinen weiteren
                          # Seiteneffekt.

         $ find
         meine_datei.txt
         mein_binary.exe
         mein_verzeichnis/
         mein_verzeichnis/und_noch_eine.txt

         $ git status
         Auf Branch master
         
         Noch keine Commits
         
         Unversionierte Dateien:
           (benutzen Sie "git add <Datei>...", um die Änderungen zum Commit vorzumerken)
                 mein_binary.exe
                 mein_verzeichnis/
                 meine_datei.txt
         
         nichts zum Commit vorgemerkt, aber es gibt unversionierte Dateien
         (benutzen Sie "git add" zum Versionieren)

         $ git add *      # git pflegt eine Liste von Dateien, welche zu
                          # einem "Commit" gehören. Dieser Befehl fügt
                          # alle Dateien und Unter-Verzeichnisse dieser
                          # Liste hinzu...

                          # Ein "Commit" sind Änderungen, welche alle zusammen eine
                          # für einen Menschen sinnvoll verständliche Einheit bilden.

         $ git commit *   # hier sagt man git: "bitte speichere all die geänderten
                          # Dateien und Verzeichnisse welche ich Dir angegeben habe
                          # als eine grosse Änderung". Git fragt einen danach noch
                          # nach einem Änderungstext (prosa Beschreibung der
                          # Änderungen).

                          # Eine Kopie der geänderten Dateien wird nun in
                          # .git/objects abgespeichert.

         # nun arbeite ich an meinen Dateien...
        
         $ edit meine_datei.txt mein_binary.exe

         # ... und sobald ich zufrieden mit dem (Zwischen)Resultat bin ...

         $ git add meine_datei.txt mein_binary.exe
         $ git commit meine_datei.txt mein_binary.exe
